Code Analysis

Part 1)
  The data we recieved from running cuda.sh is below. effective bandwidth is being calculated on this line of code in naive.cu: double bw = (N * sizeof(dtype)) / (t_kernel_0 * 1e9);
  N is the size of the data, dtype is the datatype and it is divided by t_kernel_0 which is the time to execute the naive GPU reduction kernel * 1000000000. 

=== Running 5 trials of naive ... ===
*** Trial 1 ***
N: 8388608
Timer: gettimeofday
Timer resolution: ~ 1 us (?)
Time to execute naive GPU reduction kernel: 0.003449 secs
Effective bandwidth: 9.73 GB/s
Time to execute naive CPU reduction: 0.125377 secs
SUCCESS: GPU: 41.932472 	CPU: 41.932472
*** Trial 2 ***
N: 8388608
Timer: gettimeofday
Timer resolution: ~ 1 us (?)
Time to execute naive GPU reduction kernel: 0.003354 secs
Effective bandwidth: 10.00 GB/s
Time to execute naive CPU reduction: 0.112823 secs
SUCCESS: GPU: 41.937958 	CPU: 41.937954
*** Trial 3 ***
N: 8388608
Timer: gettimeofday
Timer resolution: ~ 1 us (?)
Time to execute naive GPU reduction kernel: 0.003393 secs
Effective bandwidth: 9.89 GB/s
Time to execute naive CPU reduction: 0.116264 secs
SUCCESS: GPU: 41.937958 	CPU: 41.937954
*** Trial 4 ***
N: 8388608
Timer: gettimeofday
Timer resolution: ~ 1 us (?)
Time to execute naive GPU reduction kernel: 0.003389 secs
Effective bandwidth: 9.90 GB/s
Time to execute naive CPU reduction: 0.114101 secs
SUCCESS: GPU: 41.938168 	CPU: 41.938168
*** Trial 5 ***
N: 8388608
Timer: gettimeofday
Timer resolution: ~ 1 us (?)
Time to execute naive GPU reduction kernel: 0.003353 secs
Effective bandwidth: 10.01 GB/s
Time to execute naive CPU reduction: 0.11614 secs
SUCCESS: GPU: 41.955299 	CPU: 41.955299

=== Done! ===



Part 2)
Part 3)
Part 4)
Part 5)
Part 6)
